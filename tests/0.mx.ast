-CompilationNode (void)			// classbuilt_in_string{intlength(){return0;}stringsubstring(intleft,intright){return"";}intparseInt(){return0;}intord(intpos){return0;}}classbuilt_in_array{intsize(){return0;}}voidprintf(stringf,stringsrc){}stringgetString(){return"littleRound";}intgetInt(){return0;}stringtoString(inti){return"littleRound";}voidprint(stringstr){printf("%s",str);}voidprintln(stringstr){printf("%s\n",str);}voidbuilt_in_data_init(){}intcd(intd,stringa,stringb,stringc,intsum){if(d==1){sum++;}else{sum=cd(d-1,a,c,b,sum);sum=cd(d-1,b,a,c,sum);sum++;}returnsum;}intmain(){stringa="A";stringb="B";stringc="C";intd=getInt();intsum=cd(d,a,b,c,0);println(toString(sum));return0;}<EOF>
    -FuncDefinitionNode (void)			// voidprintf(stringf,stringsrc){}
        -TypeNode (void)			// void
            -TypeAttributeNode (void)			// void
        -FuncDeclaratorNode (void)			// printf(stringf,stringsrc)
            -DeclaratorNode (void)			// printf
            -ArgumentTypeListNode (void)			// stringf,stringsrc
                -ArgumentDeclarationNode (void)			// stringf
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// f
                -ArgumentDeclarationNode (void)			// stringsrc
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// src
        -BlockNode (void)			// {}
    -FuncDefinitionNode (void)			// stringgetString(){return"littleRound";}
        -TypeNode (void)			// string
            -TypeAttributeNode (void)			// string
        -FuncDeclaratorNode (void)			// getString()
            -DeclaratorNode (void)			// getString
            -ArgumentTypeListNode (void)
        -BlockNode (void)			// {return"littleRound";}
            -ReturnNode (void)			// return"littleRound";
                -StringLiteralNode (string)			// "littleRound"
    -FuncDefinitionNode (void)			// intgetInt(){return0;}
        -TypeNode (void)			// int
            -TypeAttributeNode (void)			// int
        -FuncDeclaratorNode (void)			// getInt()
            -DeclaratorNode (void)			// getInt
            -ArgumentTypeListNode (void)
        -BlockNode (void)			// {return0;}
            -ReturnNode (void)			// return0;
                -ConstantNode (int)			// 0
    -FuncDefinitionNode (void)			// stringtoString(inti){return"littleRound";}
        -TypeNode (void)			// string
            -TypeAttributeNode (void)			// string
        -FuncDeclaratorNode (void)			// toString(inti)
            -DeclaratorNode (void)			// toString
            -ArgumentTypeListNode (void)			// inti
                -ArgumentDeclarationNode (void)			// inti
                    -TypeNode (void)			// int
                        -TypeAttributeNode (void)			// int
                    -DeclaratorNode (void)			// i
        -BlockNode (void)			// {return"littleRound";}
            -ReturnNode (void)			// return"littleRound";
                -StringLiteralNode (string)			// "littleRound"
    -FuncDefinitionNode (void)			// voidprint(stringstr){printf("%s",str);}
        -TypeNode (void)			// void
            -TypeAttributeNode (void)			// void
        -FuncDeclaratorNode (void)			// print(stringstr)
            -DeclaratorNode (void)			// print
            -ArgumentTypeListNode (void)			// stringstr
                -ArgumentDeclarationNode (void)			// stringstr
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// str
        -BlockNode (void)			// {printf("%s",str);}
            -StatementNode (void)			// printf("%s",str);
                -ParenthesisOpNode (void)			// printf("%s",str)
                    -IdentifierNode (BaseType)			// printf
                    -ArgumentListNode (void)			// "%s",str
                        -StringLiteralNode (string)			// "%s"
                        -IdentifierNode (string)			// str
    -FuncDefinitionNode (void)			// voidprintln(stringstr){printf("%s\n",str);}
        -TypeNode (void)			// void
            -TypeAttributeNode (void)			// void
        -FuncDeclaratorNode (void)			// println(stringstr)
            -DeclaratorNode (void)			// println
            -ArgumentTypeListNode (void)			// stringstr
                -ArgumentDeclarationNode (void)			// stringstr
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// str
        -BlockNode (void)			// {printf("%s\n",str);}
            -StatementNode (void)			// printf("%s\n",str);
                -ParenthesisOpNode (void)			// printf("%s\n",str)
                    -IdentifierNode (BaseType)			// printf
                    -ArgumentListNode (void)			// "%s\n",str
                        -StringLiteralNode (string)			// "%s\n"
                        -IdentifierNode (string)			// str
    -FuncDefinitionNode (void)			// intcd(intd,stringa,stringb,stringc,intsum){if(d==1){sum++;}else{sum=cd(d-1,a,c,b,sum);sum=cd(d-1,b,a,c,sum);sum++;}returnsum;}
        -TypeNode (void)			// int
            -TypeAttributeNode (void)			// int
        -FuncDeclaratorNode (void)			// cd(intd,stringa,stringb,stringc,intsum)
            -DeclaratorNode (void)			// cd
            -ArgumentTypeListNode (void)			// intd,stringa,stringb,stringc,intsum
                -ArgumentDeclarationNode (void)			// intd
                    -TypeNode (void)			// int
                        -TypeAttributeNode (void)			// int
                    -DeclaratorNode (void)			// d
                -ArgumentDeclarationNode (void)			// stringa
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// a
                -ArgumentDeclarationNode (void)			// stringb
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// b
                -ArgumentDeclarationNode (void)			// stringc
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// c
                -ArgumentDeclarationNode (void)			// intsum
                    -TypeNode (void)			// int
                        -TypeAttributeNode (void)			// int
                    -DeclaratorNode (void)			// sum
        -BlockNode (void)			// {if(d==1){sum++;}else{sum=cd(d-1,a,c,b,sum);sum=cd(d-1,b,a,c,sum);sum++;}returnsum;}
            -IfNode (void)			// if(d==1){sum++;}else{sum=cd(d-1,a,c,b,sum);sum=cd(d-1,b,a,c,sum);sum++;}
                -EqualNode (bool)			// d==1
                    -IdentifierNode (int)			// d
                    -ConstantNode (int)			// 1
                -BlockNode (void)			// {sum++;}
                    -StatementNode (void)			// sum++;
                        -PostfixAddNode (int)			// sum++
                            -IdentifierNode (int)			// sum
                -BlockNode (void)			// {sum=cd(d-1,a,c,b,sum);sum=cd(d-1,b,a,c,sum);sum++;}
                    -StatementNode (void)			// sum=cd(d-1,a,c,b,sum);
                        -AssignNode (void)			// sum=cd(d-1,a,c,b,sum)
                            -IdentifierNode (int)			// sum
                            -ParenthesisOpNode (int)			// cd(d-1,a,c,b,sum)
                                -IdentifierNode (BaseType)			// cd
                                -ArgumentListNode (void)			// d-1,a,c,b,sum
                                    -SubNode (int)			// d-1
                                        -IdentifierNode (int)			// d
                                        -ConstantNode (int)			// 1
                                    -IdentifierNode (string)			// a
                                    -IdentifierNode (string)			// c
                                    -IdentifierNode (string)			// b
                                    -IdentifierNode (int)			// sum
                    -StatementNode (void)			// sum=cd(d-1,b,a,c,sum);
                        -AssignNode (void)			// sum=cd(d-1,b,a,c,sum)
                            -IdentifierNode (int)			// sum
                            -ParenthesisOpNode (int)			// cd(d-1,b,a,c,sum)
                                -IdentifierNode (BaseType)			// cd
                                -ArgumentListNode (void)			// d-1,b,a,c,sum
                                    -SubNode (int)			// d-1
                                        -IdentifierNode (int)			// d
                                        -ConstantNode (int)			// 1
                                    -IdentifierNode (string)			// b
                                    -IdentifierNode (string)			// a
                                    -IdentifierNode (string)			// c
                                    -IdentifierNode (int)			// sum
                    -StatementNode (void)			// sum++;
                        -PostfixAddNode (int)			// sum++
                            -IdentifierNode (int)			// sum
            -ReturnNode (void)			// returnsum;
                -IdentifierNode (int)			// sum
    -FuncDefinitionNode (void)			// intmain(){stringa="A";stringb="B";stringc="C";intd=getInt();intsum=cd(d,a,b,c,0);println(toString(sum));return0;}
        -TypeNode (void)			// int
            -TypeAttributeNode (void)			// int
        -FuncDeclaratorNode (void)			// main()
            -DeclaratorNode (void)			// main
            -ArgumentTypeListNode (void)
        -BlockNode (void)			// {stringa="A";stringb="B";stringc="C";intd=getInt();intsum=cd(d,a,b,c,0);println(toString(sum));return0;}
            -DeclarationNode (void)			// stringa="A";
                -TypeNode (void)			// string
                    -TypeAttributeNode (void)			// string
                -DeclaratorListNode (void)			// a="A"
                    -InitDeclaratorNode (void)			// a="A"
                        -DeclaratorNode (void)			// a
                        -StringLiteralNode (string)			// "A"
            -DeclarationNode (void)			// stringb="B";
                -TypeNode (void)			// string
                    -TypeAttributeNode (void)			// string
                -DeclaratorListNode (void)			// b="B"
                    -InitDeclaratorNode (void)			// b="B"
                        -DeclaratorNode (void)			// b
                        -StringLiteralNode (string)			// "B"
            -DeclarationNode (void)			// stringc="C";
                -TypeNode (void)			// string
                    -TypeAttributeNode (void)			// string
                -DeclaratorListNode (void)			// c="C"
                    -InitDeclaratorNode (void)			// c="C"
                        -DeclaratorNode (void)			// c
                        -StringLiteralNode (string)			// "C"
            -DeclarationNode (void)			// intd=getInt();
                -TypeNode (void)			// int
                    -TypeAttributeNode (void)			// int
                -DeclaratorListNode (void)			// d=getInt()
                    -InitDeclaratorNode (void)			// d=getInt()
                        -DeclaratorNode (void)			// d
                        -ParenthesisOpNode (int)			// getInt()
                            -IdentifierNode (BaseType)			// getInt
                            -ArgumentListNode (void)
            -DeclarationNode (void)			// intsum=cd(d,a,b,c,0);
                -TypeNode (void)			// int
                    -TypeAttributeNode (void)			// int
                -DeclaratorListNode (void)			// sum=cd(d,a,b,c,0)
                    -InitDeclaratorNode (void)			// sum=cd(d,a,b,c,0)
                        -DeclaratorNode (void)			// sum
                        -ParenthesisOpNode (int)			// cd(d,a,b,c,0)
                            -IdentifierNode (BaseType)			// cd
                            -ArgumentListNode (void)			// d,a,b,c,0
                                -IdentifierNode (int)			// d
                                -IdentifierNode (string)			// a
                                -IdentifierNode (string)			// b
                                -IdentifierNode (string)			// c
                                -ConstantNode (int)			// 0
            -StatementNode (void)			// println(toString(sum));
                -ParenthesisOpNode (void)			// println(toString(sum))
                    -IdentifierNode (BaseType)			// println
                    -ArgumentListNode (void)			// toString(sum)
                        -ParenthesisOpNode (string)			// toString(sum)
                            -IdentifierNode (BaseType)			// toString
                            -ArgumentListNode (void)			// sum
                                -IdentifierNode (int)			// sum
            -ReturnNode (void)			// return0;
                -ConstantNode (int)			// 0
