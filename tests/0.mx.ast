-CompilationNode (void)			// classbuilt_in_string{intlength(){return0;}stringsubstring(intleft,intright){return"";}intparseInt(){return0;}intord(intpos){return0;}}classbuilt_in_array{intsize(){return0;}}voidprintf(stringf,stringsrc){}stringgetString(){return"littleRound";}intgetInt(){return0;}stringtoString(inti){return"littleRound";}voidprint(stringstr){printf("%s",str);}voidprintln(stringstr){printf("%s\n",str);}voidbuilt_in_data_init(){}classA{voidprint(stringx){println("A's "+x);}voidtry_print(strings){print(s);}}intmain(){Aa=newA;a.try_print("gzotpa");return0;}<EOF>
    -FuncDefinitionNode (void)			// voidprintf(stringf,stringsrc){}
        -TypeNode (void)			// void
            -TypeAttributeNode (void)			// void
        -FuncDeclaratorNode (void)			// printf(stringf,stringsrc)
            -DeclaratorNode (void)			// printf
            -ArgumentTypeListNode (void)			// stringf,stringsrc
                -ArgumentDeclarationNode (void)			// stringf
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// f
                -ArgumentDeclarationNode (void)			// stringsrc
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// src
        -BlockNode (void)			// {}
    -FuncDefinitionNode (void)			// stringgetString(){return"littleRound";}
        -TypeNode (void)			// string
            -TypeAttributeNode (void)			// string
        -FuncDeclaratorNode (void)			// getString()
            -DeclaratorNode (void)			// getString
            -ArgumentTypeListNode (void)
        -BlockNode (void)			// {return"littleRound";}
            -ReturnNode (void)			// return"littleRound";
                -StringLiteralNode (string)			// "littleRound"
    -FuncDefinitionNode (void)			// intgetInt(){return0;}
        -TypeNode (void)			// int
            -TypeAttributeNode (void)			// int
        -FuncDeclaratorNode (void)			// getInt()
            -DeclaratorNode (void)			// getInt
            -ArgumentTypeListNode (void)
        -BlockNode (void)			// {return0;}
            -ReturnNode (void)			// return0;
                -ConstantNode (int)			// 0
    -FuncDefinitionNode (void)			// stringtoString(inti){return"littleRound";}
        -TypeNode (void)			// string
            -TypeAttributeNode (void)			// string
        -FuncDeclaratorNode (void)			// toString(inti)
            -DeclaratorNode (void)			// toString
            -ArgumentTypeListNode (void)			// inti
                -ArgumentDeclarationNode (void)			// inti
                    -TypeNode (void)			// int
                        -TypeAttributeNode (void)			// int
                    -DeclaratorNode (void)			// i
        -BlockNode (void)			// {return"littleRound";}
            -ReturnNode (void)			// return"littleRound";
                -StringLiteralNode (string)			// "littleRound"
    -FuncDefinitionNode (void)			// voidprint(stringstr){printf("%s",str);}
        -TypeNode (void)			// void
            -TypeAttributeNode (void)			// void
        -FuncDeclaratorNode (void)			// print(stringstr)
            -DeclaratorNode (void)			// print
            -ArgumentTypeListNode (void)			// stringstr
                -ArgumentDeclarationNode (void)			// stringstr
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// str
        -BlockNode (void)			// {printf("%s",str);}
            -StatementNode (void)			// printf("%s",str);
                -ParenthesisOpNode (void)			// printf("%s",str)
                    -IdentifierNode (BaseType)			// printf
                    -ArgumentListNode (void)			// "%s",str
                        -StringLiteralNode (string)			// "%s"
                        -IdentifierNode (string)			// str
    -FuncDefinitionNode (void)			// voidprintln(stringstr){printf("%s\n",str);}
        -TypeNode (void)			// void
            -TypeAttributeNode (void)			// void
        -FuncDeclaratorNode (void)			// println(stringstr)
            -DeclaratorNode (void)			// println
            -ArgumentTypeListNode (void)			// stringstr
                -ArgumentDeclarationNode (void)			// stringstr
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// str
        -BlockNode (void)			// {printf("%s\n",str);}
            -StatementNode (void)			// printf("%s\n",str);
                -ParenthesisOpNode (void)			// printf("%s\n",str)
                    -IdentifierNode (BaseType)			// printf
                    -ArgumentListNode (void)			// "%s\n",str
                        -StringLiteralNode (string)			// "%s\n"
                        -IdentifierNode (string)			// str
    -ClassDefinitionNode (void)			// classA{voidprint(stringx){println("A's "+x);}voidtry_print(strings){print(s);}}
        -FuncDefinitionNode (void)			// voidprint(stringx){println("A's "+x);}
            -TypeNode (void)			// void
                -TypeAttributeNode (void)			// void
            -FuncDeclaratorNode (void)			// print(stringx)
                -DeclaratorNode (void)			// print
                -ArgumentTypeListNode (void)			// stringx
                    -ArgumentDeclarationNode (void)			// stringx
                        -TypeNode (void)			// string
                            -TypeAttributeNode (void)			// string
                        -DeclaratorNode (void)			// x
            -BlockNode (void)			// {println("A's "+x);}
                -StatementNode (void)			// println("A's "+x);
                    -ParenthesisOpNode (void)			// println("A's "+x)
                        -IdentifierNode (BaseType)			// println
                        -ArgumentListNode (void)			// "A's "+x
                            -AddNode (string)			// "A's "+x
                                -StringLiteralNode (string)			// "A's "
                                -IdentifierNode (string)			// x
        -FuncDefinitionNode (void)			// voidtry_print(strings){print(s);}
            -TypeNode (void)			// void
                -TypeAttributeNode (void)			// void
            -FuncDeclaratorNode (void)			// try_print(strings)
                -DeclaratorNode (void)			// try_print
                -ArgumentTypeListNode (void)			// strings
                    -ArgumentDeclarationNode (void)			// strings
                        -TypeNode (void)			// string
                            -TypeAttributeNode (void)			// string
                        -DeclaratorNode (void)			// s
            -BlockNode (void)			// {print(s);}
                -StatementNode (void)			// print(s);
                    -ParenthesisOpNode (void)			// print(s)
                        -IdentifierNode (BaseType)			// print
                        -ArgumentListNode (void)			// s
                            -IdentifierNode (string)			// s
    -FuncDefinitionNode (void)			// intmain(){Aa=newA;a.try_print("gzotpa");return0;}
        -TypeNode (void)			// int
            -TypeAttributeNode (void)			// int
        -FuncDeclaratorNode (void)			// main()
            -DeclaratorNode (void)			// main
            -ArgumentTypeListNode (void)
        -BlockNode (void)			// {Aa=newA;a.try_print("gzotpa");return0;}
            -DeclarationNode (void)			// Aa=newA;
                -TypeNode (void)			// A
                    -TypeAttributeNode (void)			// A
                -DeclaratorListNode (void)			// a=newA
                    -InitDeclaratorNode (void)			// a=newA
                        -DeclaratorNode (void)			// a
                        -NewNode (A)			// newA
                            -TypeNode (void)			// A
                                -TypeAttributeNode (void)			// A
                            -ArgumentTypeListNode (void)
            -StatementNode (void)			// a.try_print("gzotpa");
                -ParenthesisOpNode (void)			// a.try_print("gzotpa")
                    -DotOpNode (BaseType)			// a.try_print
                        -IdentifierNode (A)			// a
                    -ArgumentListNode (void)			// "gzotpa"
                        -StringLiteralNode (string)			// "gzotpa"
            -ReturnNode (void)			// return0;
                -ConstantNode (int)			// 0
