-CompilationNode (void)			// classbuilt_in_string{intlength(){return0;}stringsubstring(intleft,intright){return"";}intparseInt(){return0;}intord(intpos){return0;}}classbuilt_in_array{intsize(){return0;}}voidprintf(stringf,stringsrc){}stringgetString(){return"littleRound";}intgetInt(){return0;}stringtoString(inti){return"littleRound";}voidprint(stringstr){printf("%s",str);}voidprintln(stringstr){printf("%s\n",str);}voidbuilt_in_data_init(){}intadd(intx,inty){return(x+y)%233;}intdp(intx){if(x<=1){inttmp=7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233;returntmp;}intsum=0;inti;for(i=2;i<=x;i++)if((x^i)<x)sum=add(sum,dp(x^i));returnsum;}intmain(){inti;intn=getInt();for(i=1;i<=n;i++)println(toString(dp(i)));return0;}<EOF>
    -FuncDefinitionNode (void)			// voidprintf(stringf,stringsrc){}
        -TypeNode (void)			// void
            -TypeAttributeNode (void)			// void
        -FuncDeclaratorNode (void)			// printf(stringf,stringsrc)
            -DeclaratorNode (void)			// printf
            -ArgumentTypeListNode (void)			// stringf,stringsrc
                -ArgumentDeclarationNode (void)			// stringf
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// f
                -ArgumentDeclarationNode (void)			// stringsrc
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// src
        -BlockNode (void)			// {}
    -FuncDefinitionNode (void)			// stringgetString(){return"littleRound";}
        -TypeNode (void)			// string
            -TypeAttributeNode (void)			// string
        -FuncDeclaratorNode (void)			// getString()
            -DeclaratorNode (void)			// getString
            -ArgumentTypeListNode (void)
        -BlockNode (void)			// {return"littleRound";}
            -ReturnNode (void)			// return"littleRound";
                -StringLiteralNode (string)			// "littleRound"
    -FuncDefinitionNode (void)			// intgetInt(){return0;}
        -TypeNode (void)			// int
            -TypeAttributeNode (void)			// int
        -FuncDeclaratorNode (void)			// getInt()
            -DeclaratorNode (void)			// getInt
            -ArgumentTypeListNode (void)
        -BlockNode (void)			// {return0;}
            -ReturnNode (void)			// return0;
                -ConstantNode (int)			// 0
    -FuncDefinitionNode (void)			// stringtoString(inti){return"littleRound";}
        -TypeNode (void)			// string
            -TypeAttributeNode (void)			// string
        -FuncDeclaratorNode (void)			// toString(inti)
            -DeclaratorNode (void)			// toString
            -ArgumentTypeListNode (void)			// inti
                -ArgumentDeclarationNode (void)			// inti
                    -TypeNode (void)			// int
                        -TypeAttributeNode (void)			// int
                    -DeclaratorNode (void)			// i
        -BlockNode (void)			// {return"littleRound";}
            -ReturnNode (void)			// return"littleRound";
                -StringLiteralNode (string)			// "littleRound"
    -FuncDefinitionNode (void)			// voidprint(stringstr){printf("%s",str);}
        -TypeNode (void)			// void
            -TypeAttributeNode (void)			// void
        -FuncDeclaratorNode (void)			// print(stringstr)
            -DeclaratorNode (void)			// print
            -ArgumentTypeListNode (void)			// stringstr
                -ArgumentDeclarationNode (void)			// stringstr
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// str
        -BlockNode (void)			// {printf("%s",str);}
            -StatementNode (void)			// printf("%s",str);
                -ParenthesisOpNode (void)			// printf("%s",str)
                    -IdentifierNode (BaseType)			// printf
                    -ArgumentListNode (void)			// "%s",str
                        -StringLiteralNode (string)			// "%s"
                        -IdentifierNode (string)			// str
    -FuncDefinitionNode (void)			// voidprintln(stringstr){printf("%s\n",str);}
        -TypeNode (void)			// void
            -TypeAttributeNode (void)			// void
        -FuncDeclaratorNode (void)			// println(stringstr)
            -DeclaratorNode (void)			// println
            -ArgumentTypeListNode (void)			// stringstr
                -ArgumentDeclarationNode (void)			// stringstr
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// str
        -BlockNode (void)			// {printf("%s\n",str);}
            -StatementNode (void)			// printf("%s\n",str);
                -ParenthesisOpNode (void)			// printf("%s\n",str)
                    -IdentifierNode (BaseType)			// printf
                    -ArgumentListNode (void)			// "%s\n",str
                        -StringLiteralNode (string)			// "%s\n"
                        -IdentifierNode (string)			// str
    -FuncDefinitionNode (void)			// intadd(intx,inty){return(x+y)%233;}
        -TypeNode (void)			// int
            -TypeAttributeNode (void)			// int
        -FuncDeclaratorNode (void)			// add(intx,inty)
            -DeclaratorNode (void)			// add
            -ArgumentTypeListNode (void)			// intx,inty
                -ArgumentDeclarationNode (void)			// intx
                    -TypeNode (void)			// int
                        -TypeAttributeNode (void)			// int
                    -DeclaratorNode (void)			// x
                -ArgumentDeclarationNode (void)			// inty
                    -TypeNode (void)			// int
                        -TypeAttributeNode (void)			// int
                    -DeclaratorNode (void)			// y
        -BlockNode (void)			// {return(x+y)%233;}
            -ReturnNode (void)			// return(x+y)%233;
                -ModuloNode (int)			// (x+y)%233
                    -AddNode (int)			// (x+y)
                        -IdentifierNode (int)			// x
                        -IdentifierNode (int)			// y
                    -ConstantNode (int)			// 233
    -FuncDefinitionNode (void)			// intdp(intx){if(x<=1){inttmp=7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233;returntmp;}intsum=0;inti;for(i=2;i<=x;i++)if((x^i)<x)sum=add(sum,dp(x^i));returnsum;}
        -TypeNode (void)			// int
            -TypeAttributeNode (void)			// int
        -FuncDeclaratorNode (void)			// dp(intx)
            -DeclaratorNode (void)			// dp
            -ArgumentTypeListNode (void)			// intx
                -ArgumentDeclarationNode (void)			// intx
                    -TypeNode (void)			// int
                        -TypeAttributeNode (void)			// int
                    -DeclaratorNode (void)			// x
        -BlockNode (void)			// {if(x<=1){inttmp=7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233;returntmp;}intsum=0;inti;for(i=2;i<=x;i++)if((x^i)<x)sum=add(sum,dp(x^i));returnsum;}
            -IfNode (void)			// if(x<=1){inttmp=7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233;returntmp;}
                -LessOrEqualThanNode (bool)			// x<=1
                    -IdentifierNode (int)			// x
                    -ConstantNode (int)			// 1
                -BlockNode (void)			// {inttmp=7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233;returntmp;}
                    -DeclarationNode (void)			// inttmp=7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233;
                        -TypeNode (void)			// int
                            -TypeAttributeNode (void)			// int
                        -DeclaratorListNode (void)			// tmp=7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233
                            -InitDeclaratorNode (void)			// tmp=7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233*7%233
                                -DeclaratorNode (void)			// tmp
                                -ConstantNode (int)
                    -ReturnNode (void)			// returntmp;
                        -IdentifierNode (int)			// tmp
            -DeclarationNode (void)			// intsum=0;
                -TypeNode (void)			// int
                    -TypeAttributeNode (void)			// int
                -DeclaratorListNode (void)			// sum=0
                    -InitDeclaratorNode (void)			// sum=0
                        -DeclaratorNode (void)			// sum
                        -ConstantNode (int)			// 0
            -DeclarationNode (void)			// inti;
                -TypeNode (void)			// int
                    -TypeAttributeNode (void)			// int
                -DeclaratorListNode (void)			// i
                    -InitDeclaratorNode (void)			// i
                        -DeclaratorNode (void)			// i
            -ForNode (void)			// for(i=2;i<=x;i++)if((x^i)<x)sum=add(sum,dp(x^i));
                -ForConditionNode (void)			// i=2;i<=x;i++
                    -AssignNode (void)			// i=2
                        -IdentifierNode (int)			// i
                        -ConstantNode (int)			// 2
                    -LessOrEqualThanNode (bool)			// i<=x
                        -IdentifierNode (int)			// i
                        -IdentifierNode (int)			// x
                    -PostfixAddNode (int)			// i++
                        -IdentifierNode (int)			// i
                -IfNode (void)			// if((x^i)<x)sum=add(sum,dp(x^i));
                    -LessThanNode (bool)			// (x^i)<x
                        -XorNode (int)			// (x^i)
                            -IdentifierNode (int)			// x
                            -IdentifierNode (int)			// i
                        -IdentifierNode (int)			// x
                    -StatementNode (void)			// sum=add(sum,dp(x^i));
                        -AssignNode (void)			// sum=add(sum,dp(x^i))
                            -IdentifierNode (int)			// sum
                            -ModuloNode (int)			// (x+y)%233
                                -AddNode (int)			// (x+y)
                                    -IdentifierNode (int)			// sum
                                    -ParenthesisOpNode (int)			// dp(x^i)
                                        -IdentifierNode (BaseType)			// dp
                                        -ArgumentListNode (void)			// x^i
                                            -XorNode (int)			// x^i
                                                -IdentifierNode (int)			// x
                                                -IdentifierNode (int)			// i
                                -ConstantNode (int)			// 233
            -ReturnNode (void)			// returnsum;
                -IdentifierNode (int)			// sum
    -FuncDefinitionNode (void)			// intmain(){inti;intn=getInt();for(i=1;i<=n;i++)println(toString(dp(i)));return0;}
        -TypeNode (void)			// int
            -TypeAttributeNode (void)			// int
        -FuncDeclaratorNode (void)			// main()
            -DeclaratorNode (void)			// main
            -ArgumentTypeListNode (void)
        -BlockNode (void)			// {inti;intn=getInt();for(i=1;i<=n;i++)println(toString(dp(i)));return0;}
            -DeclarationNode (void)			// inti;
                -TypeNode (void)			// int
                    -TypeAttributeNode (void)			// int
                -DeclaratorListNode (void)			// i
                    -InitDeclaratorNode (void)			// i
                        -DeclaratorNode (void)			// i
            -DeclarationNode (void)			// intn=getInt();
                -TypeNode (void)			// int
                    -TypeAttributeNode (void)			// int
                -DeclaratorListNode (void)			// n=getInt()
                    -InitDeclaratorNode (void)			// n=getInt()
                        -DeclaratorNode (void)			// n
                        -ParenthesisOpNode (int)			// getInt()
                            -IdentifierNode (BaseType)			// getInt
                            -ArgumentListNode (void)
            -ForNode (void)			// for(i=1;i<=n;i++)println(toString(dp(i)));
                -ForConditionNode (void)			// i=1;i<=n;i++
                    -AssignNode (void)			// i=1
                        -IdentifierNode (int)			// i
                        -ConstantNode (int)			// 1
                    -LessOrEqualThanNode (bool)			// i<=n
                        -IdentifierNode (int)			// i
                        -IdentifierNode (int)			// n
                    -PostfixAddNode (int)			// i++
                        -IdentifierNode (int)			// i
                -StatementNode (void)			// println(toString(dp(i)));
                    -ParenthesisOpNode (void)			// println(toString(dp(i)))
                        -IdentifierNode (BaseType)			// println
                        -ArgumentListNode (void)			// toString(dp(i))
                            -ParenthesisOpNode (string)			// toString(dp(i))
                                -IdentifierNode (BaseType)			// toString
                                -ArgumentListNode (void)			// dp(i)
                                    -ParenthesisOpNode (int)			// dp(i)
                                        -IdentifierNode (BaseType)			// dp
                                        -ArgumentListNode (void)			// i
                                            -IdentifierNode (int)			// i
            -ReturnNode (void)			// return0;
                -ConstantNode (int)			// 0
