-CompilationNode (void)			// classbuilt_in_string{intlength(){return0;}stringsubstring(intleft,intright){return"";}intparseInt(){return0;}intord(intpos){return0;}}classbuilt_in_array{intsize(){return0;}}voidprintf(stringf,stringsrc){}stringgetString(){return"littleRound";}intgetInt(){return0;}stringtoString(inti){return"littleRound";}voidprint(stringstr){printf("%s",str);}voidprintln(stringstr){printf("%s\n",str);}voidbuilt_in_data_init(){}intmain(){intk;k=getInt();print("p cnf ");println(toString(k*2+1)+" "+toString(k));inti;intlast;last=1;stringt;for(i=0;i<k;++i){t=toString(last)+" "+toString(last+1)+" "+toString(-(last+2));if(i%100000==0){println(t);}last=last+2;}return0;}<EOF>
    -FuncDefinitionNode (void)			// voidprintf(stringf,stringsrc){}
        -TypeNode (void)			// void
            -TypeAttributeNode (void)			// void
        -FuncDeclaratorNode (void)			// printf(stringf,stringsrc)
            -DeclaratorNode (void)			// printf
            -ArgumentTypeListNode (void)			// stringf,stringsrc
                -ArgumentDeclarationNode (void)			// stringf
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// f
                -ArgumentDeclarationNode (void)			// stringsrc
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// src
        -BlockNode (void)			// {}
    -FuncDefinitionNode (void)			// stringgetString(){return"littleRound";}
        -TypeNode (void)			// string
            -TypeAttributeNode (void)			// string
        -FuncDeclaratorNode (void)			// getString()
            -DeclaratorNode (void)			// getString
            -ArgumentTypeListNode (void)
        -BlockNode (void)			// {return"littleRound";}
            -ReturnNode (void)			// return"littleRound";
                -StringLiteralNode (string)			// "littleRound"
    -FuncDefinitionNode (void)			// intgetInt(){return0;}
        -TypeNode (void)			// int
            -TypeAttributeNode (void)			// int
        -FuncDeclaratorNode (void)			// getInt()
            -DeclaratorNode (void)			// getInt
            -ArgumentTypeListNode (void)
        -BlockNode (void)			// {return0;}
            -ReturnNode (void)			// return0;
                -ConstantNode (int)			// 0
    -FuncDefinitionNode (void)			// stringtoString(inti){return"littleRound";}
        -TypeNode (void)			// string
            -TypeAttributeNode (void)			// string
        -FuncDeclaratorNode (void)			// toString(inti)
            -DeclaratorNode (void)			// toString
            -ArgumentTypeListNode (void)			// inti
                -ArgumentDeclarationNode (void)			// inti
                    -TypeNode (void)			// int
                        -TypeAttributeNode (void)			// int
                    -DeclaratorNode (void)			// i
        -BlockNode (void)			// {return"littleRound";}
            -ReturnNode (void)			// return"littleRound";
                -StringLiteralNode (string)			// "littleRound"
    -FuncDefinitionNode (void)			// voidprint(stringstr){printf("%s",str);}
        -TypeNode (void)			// void
            -TypeAttributeNode (void)			// void
        -FuncDeclaratorNode (void)			// print(stringstr)
            -DeclaratorNode (void)			// print
            -ArgumentTypeListNode (void)			// stringstr
                -ArgumentDeclarationNode (void)			// stringstr
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// str
        -BlockNode (void)			// {printf("%s",str);}
            -StatementNode (void)			// printf("%s",str);
                -ParenthesisOpNode (void)			// printf("%s",str)
                    -IdentifierNode (BaseType)			// printf
                    -ArgumentListNode (void)			// "%s",str
                        -StringLiteralNode (string)			// "%s"
                        -IdentifierNode (string)			// str
    -FuncDefinitionNode (void)			// voidprintln(stringstr){printf("%s\n",str);}
        -TypeNode (void)			// void
            -TypeAttributeNode (void)			// void
        -FuncDeclaratorNode (void)			// println(stringstr)
            -DeclaratorNode (void)			// println
            -ArgumentTypeListNode (void)			// stringstr
                -ArgumentDeclarationNode (void)			// stringstr
                    -TypeNode (void)			// string
                        -TypeAttributeNode (void)			// string
                    -DeclaratorNode (void)			// str
        -BlockNode (void)			// {printf("%s\n",str);}
            -StatementNode (void)			// printf("%s\n",str);
                -ParenthesisOpNode (void)			// printf("%s\n",str)
                    -IdentifierNode (BaseType)			// printf
                    -ArgumentListNode (void)			// "%s\n",str
                        -StringLiteralNode (string)			// "%s\n"
                        -IdentifierNode (string)			// str
    -FuncDefinitionNode (void)			// intmain(){intk;k=getInt();print("p cnf ");println(toString(k*2+1)+" "+toString(k));inti;intlast;last=1;stringt;for(i=0;i<k;++i){t=toString(last)+" "+toString(last+1)+" "+toString(-(last+2));if(i%100000==0){println(t);}last=last+2;}return0;}
        -TypeNode (void)			// int
            -TypeAttributeNode (void)			// int
        -FuncDeclaratorNode (void)			// main()
            -DeclaratorNode (void)			// main
            -ArgumentTypeListNode (void)
        -BlockNode (void)			// {intk;k=getInt();print("p cnf ");println(toString(k*2+1)+" "+toString(k));inti;intlast;last=1;stringt;for(i=0;i<k;++i){t=toString(last)+" "+toString(last+1)+" "+toString(-(last+2));if(i%100000==0){println(t);}last=last+2;}return0;}
            -DeclarationNode (void)			// intk;
                -TypeNode (void)			// int
                    -TypeAttributeNode (void)			// int
                -DeclaratorListNode (void)			// k
                    -InitDeclaratorNode (void)			// k
                        -DeclaratorNode (void)			// k
            -StatementNode (void)			// k=getInt();
                -AssignNode (void)			// k=getInt()
                    -IdentifierNode (int)			// k
                    -ParenthesisOpNode (int)			// getInt()
                        -IdentifierNode (BaseType)			// getInt
                        -ArgumentListNode (void)
            -StatementNode (void)			// print("p cnf ");
                -ParenthesisOpNode (void)			// print("p cnf ")
                    -IdentifierNode (BaseType)			// print
                    -ArgumentListNode (void)			// "p cnf "
                        -StringLiteralNode (string)			// "p cnf "
            -StatementNode (void)			// println(toString(k*2+1)+" "+toString(k));
                -ParenthesisOpNode (void)			// println(toString(k*2+1)+" "+toString(k))
                    -IdentifierNode (BaseType)			// println
                    -ArgumentListNode (void)			// toString(k*2+1)+" "+toString(k)
                        -AddNode (string)			// toString(k*2+1)+" "+toString(k)
                            -AddNode (string)			// toString(k*2+1)+" "
                                -ParenthesisOpNode (string)			// toString(k*2+1)
                                    -IdentifierNode (BaseType)			// toString
                                    -ArgumentListNode (void)			// k*2+1
                                        -AddNode (int)			// k*2+1
                                            -MultiplyNode (int)			// k*2
                                                -IdentifierNode (int)			// k
                                                -ConstantNode (int)			// 2
                                            -ConstantNode (int)			// 1
                                -StringLiteralNode (string)			// " "
                            -ParenthesisOpNode (string)			// toString(k)
                                -IdentifierNode (BaseType)			// toString
                                -ArgumentListNode (void)			// k
                                    -IdentifierNode (int)			// k
            -DeclarationNode (void)			// inti;
                -TypeNode (void)			// int
                    -TypeAttributeNode (void)			// int
                -DeclaratorListNode (void)			// i
                    -InitDeclaratorNode (void)			// i
                        -DeclaratorNode (void)			// i
            -DeclarationNode (void)			// intlast;
                -TypeNode (void)			// int
                    -TypeAttributeNode (void)			// int
                -DeclaratorListNode (void)			// last
                    -InitDeclaratorNode (void)			// last
                        -DeclaratorNode (void)			// last
            -StatementNode (void)			// last=1;
                -AssignNode (void)			// last=1
                    -IdentifierNode (int)			// last
                    -ConstantNode (int)			// 1
            -DeclarationNode (void)			// stringt;
                -TypeNode (void)			// string
                    -TypeAttributeNode (void)			// string
                -DeclaratorListNode (void)			// t
                    -InitDeclaratorNode (void)			// t
                        -DeclaratorNode (void)			// t
            -ForNode (void)			// for(i=0;i<k;++i){t=toString(last)+" "+toString(last+1)+" "+toString(-(last+2));if(i%100000==0){println(t);}last=last+2;}
                -ForConditionNode (void)			// i=0;i<k;++i
                    -AssignNode (void)			// i=0
                        -IdentifierNode (int)			// i
                        -ConstantNode (int)			// 0
                    -LessThanNode (bool)			// i<k
                        -IdentifierNode (int)			// i
                        -IdentifierNode (int)			// k
                    -PrefixAddNode (int)			// ++i
                        -IdentifierNode (int)			// i
                -BlockNode (void)			// {t=toString(last)+" "+toString(last+1)+" "+toString(-(last+2));if(i%100000==0){println(t);}last=last+2;}
                    -StatementNode (void)			// t=toString(last)+" "+toString(last+1)+" "+toString(-(last+2));
                        -AssignNode (void)			// t=toString(last)+" "+toString(last+1)+" "+toString(-(last+2))
                            -IdentifierNode (string)			// t
                            -AddNode (string)			// toString(last)+" "+toString(last+1)+" "+toString(-(last+2))
                                -AddNode (string)			// toString(last)+" "+toString(last+1)+" "
                                    -AddNode (string)			// toString(last)+" "+toString(last+1)
                                        -AddNode (string)			// toString(last)+" "
                                            -ParenthesisOpNode (string)			// toString(last)
                                                -IdentifierNode (BaseType)			// toString
                                                -ArgumentListNode (void)			// last
                                                    -IdentifierNode (int)			// last
                                            -StringLiteralNode (string)			// " "
                                        -ParenthesisOpNode (string)			// toString(last+1)
                                            -IdentifierNode (BaseType)			// toString
                                            -ArgumentListNode (void)			// last+1
                                                -AddNode (int)			// last+1
                                                    -IdentifierNode (int)			// last
                                                    -ConstantNode (int)			// 1
                                    -StringLiteralNode (string)			// " "
                                -ParenthesisOpNode (string)			// toString(-(last+2))
                                    -IdentifierNode (BaseType)			// toString
                                    -ArgumentListNode (void)			// -(last+2)
                                        -UnaryNegativeNode (int)			// -(last+2)
                                            -AddNode (int)			// (last+2)
                                                -IdentifierNode (int)			// last
                                                -ConstantNode (int)			// 2
                    -IfNode (void)			// if(i%100000==0){println(t);}
                        -EqualNode (bool)			// i%100000==0
                            -ModuloNode (int)			// i%100000
                                -IdentifierNode (int)			// i
                                -ConstantNode (int)			// 100000
                            -ConstantNode (int)			// 0
                        -BlockNode (void)			// {println(t);}
                            -StatementNode (void)			// println(t);
                                -ParenthesisOpNode (void)			// println(t)
                                    -IdentifierNode (BaseType)			// println
                                    -ArgumentListNode (void)			// t
                                        -IdentifierNode (string)			// t
                    -StatementNode (void)			// last=last+2;
                        -AssignNode (void)			// last=last+2
                            -IdentifierNode (int)			// last
                            -AddNode (int)			// last+2
                                -IdentifierNode (int)			// last
                                -ConstantNode (int)			// 2
            -ReturnNode (void)			// return0;
                -ConstantNode (int)			// 0
