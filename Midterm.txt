截至2018年5月3日，该项目已完成了如下部分：
    - 通过antlr，在修改C语言官方g4文件（精简、增加面对对象相关内容）的基础上，完成词法分析
    - 通过listener+压栈的方式，构建了继承结构清晰、信息保存完整的AST语法树
      （https://raw.githubusercontent.com/camelop/MxStaro/master/Midterm.png）
    - 建立了错误信息完备（上下文，错误内容，错误类型）的报错系统，并支持一次编译报多个错误
    - 完成了树上的符号表构建、类型推断以及语法检查，并通过当前已知所有测试点

当前正在进行的部分：
    - 学习nasm，脑补IR
    - 开始阅读龙书相关部分

心得体会相关：
    - 自己不看书弄一套AST还是可行的（但愿后面不要re，尤其但愿不要因为效率原因re）
    - 想要支持特定feature前三思，比如
        支持形如int x=1, y=2; 的语法会导致 int x=0; int y=x, z=y;的scope不好处理
        赋值运算符有返回值会导致左值处理出现问题
        支持“函数（包括构造）重载”+“函数与类重名”，会导致函数调用撞上类的构造方法调用
        支持“函数/类”内嵌“函数/类”会导致符号表进一步复杂化（同参数同Identifier的函数在不同的域里是不同的函数）
    - codegen部分不看书有点推不下去了
    - Mx语言ub不少，面向数据编程总有种怪怪的感觉
    - 助教学长们修整网站辛苦了